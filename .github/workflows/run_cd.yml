name: CD - Build and Run Swarm

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      DOPPLER_TOKEN:
        required: true
      HOST_NAME:
        required: true
      HOST_IP:
        required: true
      HOST_NAME_SSH:
        required: true
      SSH_PRIVATE_KEY:
        required: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.HOST_NAME }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.HOST_IP }} >> ~/.ssh/known_hosts

      - name: Debug SSH Connection
        run: ssh -T ${{ secrets.HOST_NAME_SSH }} || true

      - name: Remove, recreate backend directory, clone repository, and move .env directory
        run: |
          ssh ${{ secrets.HOST_NAME_SSH }} '
            rm -rf /var/www/pracaArturScibor/praca.server.arturscibor.pl &&
            mkdir -p /var/www/pracaArturScibor/praca.server.arturscibor.pl &&
            cd /var/www/pracaArturScibor/praca.server.arturscibor.pl &&
            git clone --branch main git@github.com:1ChaLLengeR1/project-job-server-FastAPI.git . &&
            mkdir -p ./env &&
            doppler secrets download --token ${{ secrets.DOPPLER_TOKEN }} --project server_job --config prd --no-file --format env > ./env/.prod.env
          '
      - name: Deploy Docker Swarm stack
        run: |
          ssh ${{ secrets.HOST_NAME_SSH }} '
            cd /var/www/pracaArturScibor/praca.server.arturscibor.pl &&
          
            echo ">>> Aktualizacja stacka Traefik..."
            docker stack deploy -c dockerfiles/terafik/traefik.yml traefik &&
            
            echo ">>> Aktualizacja stacka aplikacji..."
            docker stack deploy -c prod.swarm.docker-compose.yaml project_job_service &&
          
            echo ">>> Usuwanie nieużywanych obrazów..."
            docker image prune -f
          '

      - name: Remove all files from server
        run: |
          ssh ${{ secrets.HOST_NAME_SSH }} '
            rm -rf /var/www/pracaArturScibor/praca.server.arturscibor.pl
          '